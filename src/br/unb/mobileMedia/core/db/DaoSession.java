package br.unb.mobileMedia.core.db;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;
import br.unb.mobileMedia.core.domain.Audio;
import br.unb.mobileMedia.core.domain.Author;
import br.unb.mobileMedia.core.domain.Album;
import br.unb.mobileMedia.core.domain.Video;
import br.unb.mobileMedia.core.domain.PlaylistMedia;
import br.unb.mobileMedia.core.domain.Playlist;
import br.unb.mobileMedia.core.domain.History;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig audioDaoConfig;
    private final DaoConfig authorDaoConfig;
    private final DaoConfig albumDaoConfig;
    private final DaoConfig videoDaoConfig;
    private final DaoConfig playlistMediaDaoConfig;
    private final DaoConfig playlistDaoConfig;
    private final DaoConfig historyDaoConfig;

    private final AudioDao audioDao;
    private final AuthorDao authorDao;
    private final AlbumDao albumDao;
    private final VideoDao videoDao;
    private final PlaylistMediaDao playlistMediaDao;
    private final PlaylistDao playlistDao;
    private final HistoryDao historyDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        audioDaoConfig = daoConfigMap.get(AudioDao.class).clone();
        audioDaoConfig.initIdentityScope(type);

        authorDaoConfig = daoConfigMap.get(AuthorDao.class).clone();
        authorDaoConfig.initIdentityScope(type);

        albumDaoConfig = daoConfigMap.get(AlbumDao.class).clone();
        albumDaoConfig.initIdentityScope(type);

        videoDaoConfig = daoConfigMap.get(VideoDao.class).clone();
        videoDaoConfig.initIdentityScope(type);

        playlistMediaDaoConfig = daoConfigMap.get(PlaylistMediaDao.class).clone();
        playlistMediaDaoConfig.initIdentityScope(type);

        playlistDaoConfig = daoConfigMap.get(PlaylistDao.class).clone();
        playlistDaoConfig.initIdentityScope(type);

        historyDaoConfig = daoConfigMap.get(HistoryDao.class).clone();
        historyDaoConfig.initIdentityScope(type);

        audioDao = new AudioDao(audioDaoConfig, this);
        authorDao = new AuthorDao(authorDaoConfig, this);
        albumDao = new AlbumDao(albumDaoConfig, this);
        videoDao = new VideoDao(videoDaoConfig, this);
        playlistMediaDao = new PlaylistMediaDao(playlistMediaDaoConfig, this);
        playlistDao = new PlaylistDao(playlistDaoConfig, this);
        historyDao = new HistoryDao(historyDaoConfig, this);

        registerDao(Audio.class, audioDao);
        registerDao(Author.class, authorDao);
        registerDao(Album.class, albumDao);
        registerDao(Video.class, videoDao);
        registerDao(PlaylistMedia.class, playlistMediaDao);
        registerDao(Playlist.class, playlistDao);
        registerDao(History.class, historyDao);
    }
    
    public void clear() {
        audioDaoConfig.getIdentityScope().clear();
        authorDaoConfig.getIdentityScope().clear();
        albumDaoConfig.getIdentityScope().clear();
        videoDaoConfig.getIdentityScope().clear();
        playlistMediaDaoConfig.getIdentityScope().clear();
        playlistDaoConfig.getIdentityScope().clear();
        historyDaoConfig.getIdentityScope().clear();
    }

    public AudioDao getAudioDao() {
        return audioDao;
    }

    public AuthorDao getAuthorDao() {
        return authorDao;
    }

    public AlbumDao getAlbumDao() {
        return albumDao;
    }

    public VideoDao getVideoDao() {
        return videoDao;
    }

    public PlaylistMediaDao getPlaylistMediaDao() {
        return playlistMediaDao;
    }

    public PlaylistDao getPlaylistDao() {
        return playlistDao;
    }

    public HistoryDao getHistoryDao() {
        return historyDao;
    }

}
